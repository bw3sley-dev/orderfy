const menuDashboard=document.getElementById("menu-dashboard"),menuProducts=document.getElementById("menu-products"),menuOrders=document.getElementById("menu-orders"),menuAllOrders=document.getElementById("menu-all-orders"),dashboard=document.getElementById("dashboard"),productForm=document.getElementById("product-form"),orderForm=document.getElementById("order-form"),allOrdersForm=document.getElementById("all-orders"),productNameInput=document.getElementById("product-name"),productPriceInput=document.getElementById("product-price"),productTableBody=document.getElementById("product-table").querySelector("tbody"),orderProductSelect=document.getElementById("order-product"),addProductButton=document.getElementById("add-product");menuDashboard.addEventListener("click",(()=>{dashboard.classList.remove("hidden"),productForm.classList.add("hidden"),orderForm.classList.add("hidden"),allOrdersForm.classList.add("hidden"),updateDashboard()})),menuProducts.addEventListener("click",(()=>{dashboard.classList.add("hidden"),productForm.classList.remove("hidden"),orderForm.classList.add("hidden"),allOrdersForm.classList.add("hidden"),loadProducts()})),menuOrders.addEventListener("click",(()=>{dashboard.classList.add("hidden"),productForm.classList.add("hidden"),orderForm.classList.remove("hidden"),allOrdersForm.classList.add("hidden"),loadOrderProducts()})),menuAllOrders.addEventListener("click",(()=>{dashboard.classList.add("hidden"),productForm.classList.add("hidden"),orderForm.classList.add("hidden"),allOrdersForm.classList.remove("hidden")}));const saveProduct=(e,t)=>{const r=JSON.parse(localStorage.getItem("products"))||[];r.push({name:e,price:parseFloat(t)}),localStorage.setItem("products",JSON.stringify(r))},loadProducts=()=>{const e=JSON.parse(localStorage.getItem("products"))||[];productTableBody.innerHTML="",e.forEach(((e,t)=>{const r=`\n        <tr>\n          <td>${e.name}</td>\n          <td>R$ ${e.price.toFixed(2)}</td>\n          <td>${e.category}</td>\n          <td>\n            <button onclick="editProduct(${t})">Editar</button>\n            <button onclick="deleteProduct(${t})">Excluir</button>\n          </td>\n        </tr>\n      `;productTableBody.innerHTML+=r}))},editProduct=e=>{const t=JSON.parse(localStorage.getItem("products"))||[],r=t[e],o=prompt("Editar Nome do Produto:",r.name),d=parseFloat(prompt("Editar Preço do Produto:",r.price.toFixed(2))),a=prompt("Editar Categoria do Produto:",r.category);o&&!isNaN(d)&&a?(t[e]={name:o,price:d,category:a},localStorage.setItem("products",JSON.stringify(t)),alert("Produto atualizado com sucesso!"),loadProducts()):alert("Entrada inválida! Tente novamente.")},deleteProduct=e=>{const t=JSON.parse(localStorage.getItem("products"))||[];confirm(`Tem certeza que deseja excluir o produto "${t[e].name}"?`)&&(t.splice(e,1),localStorage.setItem("products",JSON.stringify(t)),loadProducts())},loadOrderProducts=()=>{const e=JSON.parse(localStorage.getItem("products"))||[];orderProductSelect.innerHTML='<option value="">Selecione um produto</option>';const t=e.reduce(((e,t)=>(e[t.category]||(e[t.category]=[]),e[t.category].push(t),e)),{});Object.entries(t).forEach((([e,t])=>{const r=document.createElement("optgroup");r.label=e,t.forEach((e=>{const t=document.createElement("option");t.value=e.name,t.textContent=`${e.name} - R$ ${e.price.toFixed(2)}`,r.appendChild(t)})),orderProductSelect.appendChild(r)}))};addProductButton.addEventListener("click",(()=>{const e=productNameInput.value.trim(),t=parseFloat(productPriceInput.value),r=document.getElementById("product-category").value.trim();if(!e||isNaN(t)||!r)return void alert("Preencha todos os campos corretamente!");const o=JSON.parse(localStorage.getItem("products"))||[],d=o.find((t=>t.name.toLowerCase()===e.toLowerCase()));if(d)if(d.price===t&&d.category.toLowerCase()===r.toLowerCase())alert("Produto já cadastrado com o mesmo nome, preço e categoria. Simulando cadastro."),productNameInput.value="",productPriceInput.value="",document.getElementById("product-category").value="";else{confirm(`Já existe um produto com o nome "${e}" registrado com:\nPreço: R$ ${d.price.toFixed(2)} | Categoria: ${d.category}.\nDeseja atualizar para:\nPreço: R$ ${t.toFixed(2)} | Categoria: ${r}?`)&&(d.price=t,d.category=r,localStorage.setItem("products",JSON.stringify(o)),alert("Produto atualizado com sucesso!"),productNameInput.value="",productPriceInput.value="",document.getElementById("product-category").value="",loadProducts())}else o.push({name:e,price:t,category:r}),localStorage.setItem("products",JSON.stringify(o)),productNameInput.value="",productPriceInput.value="",document.getElementById("product-category").value="",loadProducts()}));const updateDashboard=()=>{const e=JSON.parse(localStorage.getItem("allOrders"))||[],t=(JSON.parse(localStorage.getItem("products")),e.reduce(((e,t)=>e+t.total),0));document.getElementById("total-revenue").textContent=`Receita Total (Mês): R$ ${t.toFixed(2)}`;const r=e.length;document.getElementById("total-orders-month").textContent=`Pedidos (Mês): ${r}`;const o=(new Date).toISOString().split("T")[0],d=e.filter((e=>new Date(e.id).toISOString().split("T")[0]===o)).length;document.getElementById("total-orders-day").textContent=`Pedidos (Dia): ${d}`;const a={};e.forEach((e=>{e.items.forEach((e=>{a[e.name]=(a[e.name]||0)+e.quantity}))}));const n=Object.entries(a).sort(((e,t)=>t[1]-e[1]))[0]||["-",0];document.getElementById("top-product").textContent=`Produto Mais Vendido: ${n[0]} (${n[1]})`,renderWeeklyRevenueChart(e),renderTopProductsChart(a)};let weeklyRevenueChart;const renderWeeklyRevenueChart=e=>{const t=document.getElementById("weekly-revenue-chart").getContext("2d"),r=Array(7).fill(0),o=new Date;e.forEach((e=>{const t=new Date(e.id),d=(o-t)/864e5;d>=0&&d<7&&(r[Math.floor(d)]+=e.total)})),weeklyRevenueChart&&weeklyRevenueChart.destroy(),weeklyRevenueChart=new Chart(t,{type:"line",data:{labels:["6 dias atrás","5 dias atrás","4 dias atrás","3 dias atrás","2 dias atrás","Ontem","Hoje"],datasets:[{label:"Receita",data:r.reverse(),borderColor:"#4CAF50",fill:!1}]}})};let topProductsChart;const renderTopProductsChart=e=>{const t=document.getElementById("top-products-chart").getContext("2d"),r=Object.entries(e).sort(((e,t)=>t[1]-e[1])).slice(0,12);topProductsChart&&topProductsChart.destroy(),topProductsChart=new Chart(t,{type:"pie",data:{labels:r.map((e=>e[0])),datasets:[{data:r.map((e=>e[1])),backgroundColor:["#FF6384","#36A2EB","#FFCE56","#4CAF50","#FF9F40","#9966FF","#FFCD56","#FF6F91","#A7FFEB","#8C9EFF","#B9FBC0","#FFC400"]}]}})},addToOrderButton=document.getElementById("add-to-order"),finalizeOrderButton=document.getElementById("finalize-order"),orderTableBody=document.getElementById("order-table").querySelector("tbody"),orderTotalSpan=document.getElementById("order-total");let currentOrder=[];addToOrderButton.addEventListener("click",(()=>{const e=orderProductSelect.value,t=parseInt(document.getElementById("order-quantity").value,10),r=JSON.parse(localStorage.getItem("products"))||[];if(!e||t<=0)return void alert("Selecione um produto e insira uma quantidade válida!");const o=r.find((t=>t.name===e));if(!o)return void alert("Produto não encontrado!");const d=currentOrder.find((e=>e.name===o.name));d?(d.quantity+=t,d.subtotal+=o.price*t):currentOrder.push({name:o.name,price:o.price,quantity:t,subtotal:o.price*t}),updateOrderTable()}));const updateOrderTable=()=>{orderTableBody.innerHTML="";let e=0;currentOrder.forEach(((t,r)=>{e+=t.subtotal;const o=`\n        <tr>\n          <td>${t.name}</td>\n          <td>${t.quantity}</td>\n          <td>R$ ${t.subtotal.toFixed(2)}</td>\n          <td><button onclick="deleteOrderItem(${r})">Excluir</button></td>\n        </tr>\n      `;orderTableBody.innerHTML+=o})),orderTotalSpan.textContent=e.toFixed(2)},deleteOrderItem=e=>{confirm(`Tem certeza que deseja remover "${currentOrder[e].name}" do pedido?`)&&(currentOrder.splice(e,1),updateOrderTable())};finalizeOrderButton.addEventListener("click",(()=>{if(0===currentOrder.length)return void alert("Adicione itens ao pedido antes de finalizar!");const e=JSON.parse(localStorage.getItem("allOrders"))||[],t=(new Date).toISOString(),r=(new Date).toLocaleDateString("pt-BR"),o=currentOrder.reduce(((e,t)=>e+t.subtotal),0);e.push({id:t,date:r,items:currentOrder,total:o}),localStorage.setItem("allOrders",JSON.stringify(e)),currentOrder=[],updateOrderTable(),alert("Pedido finalizado com sucesso!")}));const allOrdersTableBody=document.getElementById("all-orders-table").querySelector("tbody"),loadOrders=()=>{const e=JSON.parse(localStorage.getItem("allOrders"))||[];allOrdersTableBody.innerHTML="",e.forEach(((e,t)=>{const r=`\n        <tr>\n          <td>${t+1}</td>\n          <td>${e.items.map((e=>`${e.quantity}x ${e.name}`)).join(", ")}</td>\n          <td>R$ ${e.total.toFixed(2)}</td>\n          <td>${e.date}</td>\n          <td>\n            <button onclick="viewOrderDetails('${e.id}')">Ver Detalhes</button>\n            <button onclick="deleteOrder('${e.id}')">Excluir</button>\n          </td>\n        </tr>\n      `;allOrdersTableBody.innerHTML+=r}))},deleteOrder=e=>{const t=JSON.parse(localStorage.getItem("allOrders"))||[],r=t.findIndex((t=>t.id===e));r>-1?confirm(`Tem certeza que deseja excluir o pedido #${r+1}?`)&&(t.splice(r,1),localStorage.setItem("allOrders",JSON.stringify(t)),loadOrders(),updateDashboard()):alert("Pedido não encontrado!")},viewOrderDetails=e=>{const t=(JSON.parse(localStorage.getItem("allOrders"))||[]).find((t=>t.id===e));t?alert(`Pedido ID: ${t.id}\nItens:\n`+t.items.map((e=>`- ${e.quantity}x ${e.name} (R$ ${e.subtotal.toFixed(2)})`)).join("\n")+`\n\nTotal: R$ ${t.total.toFixed(2)}`):alert("Pedido não encontrado!")};menuAllOrders.addEventListener("click",(()=>{dashboard.classList.add("hidden"),productForm.classList.add("hidden"),orderForm.classList.add("hidden"),allOrdersForm.classList.remove("hidden"),loadOrders()})),document.getElementById("export-products").addEventListener("click",(()=>{const e=(JSON.parse(localStorage.getItem("products"))||[]).map((e=>({Nome:e.name,"Preço":`R$ ${e.price.toFixed(2)}`,Categoria:e.category}))),t=XLSX.utils.json_to_sheet(e),r=XLSX.utils.book_new();XLSX.utils.book_append_sheet(r,t,"Produtos"),XLSX.writeFile(r,"produtos.xlsx")})),document.getElementById("export-orders").addEventListener("click",(()=>{const e=(JSON.parse(localStorage.getItem("allOrders"))||[]).map(((e,t)=>({ID:t+1,Itens:e.items.map((e=>`${e.quantity}x ${e.name}`)).join(", "),Total:`R$ ${e.total.toFixed(2)}`}))),t=XLSX.utils.json_to_sheet(e),r=XLSX.utils.book_new();XLSX.utils.book_append_sheet(r,t,"Pedidos"),XLSX.writeFile(r,"pedidos.xlsx")})),updateDashboard();